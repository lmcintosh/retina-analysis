function A = ggabold(n, f, s, p, c, r, a, rw)% GGAB makes a 2D gabor function.%	ggab(n) makes an nxn gabor w/ defaults%	ggab(n,f,s) does what you might expect%	(f is in cyc/pix and s is in pixels)%	ggab(n,f,s,p) shifts the carrier phase by p degrees%	ggab(n,f,s,p,c) set the contrast to c%	ggab(n,f,s,p,c,r) rotates the gabor by r degrees%	ggab(n,f,s,p,c,r,a) sets the window's h/w ratio to a%	ggab(n,f,s,p,c,r,a,rw) rotates the window by rw degreesif nargin == 1, 	f=.05; 	s=10; 	p=0;	c=1;	elseif nargin == 2,	disp('gotta specify f *and* s');	return;elseif nargin == 3,	p=0;	c=1;elseif nargin == 4,	c=1;endp = p * pi/180;x = -n/2+.5:n/2-.5;y = c*sin(2*pi*f*x+p);B = buff2arr(y);if nargin >= 6,	B = imrotate(B, r, 'bicubic', 'crop');endif nargin < 7	a = 1;	rw = 0;elseif nargin == 7	rw = 0;endG = ggaus(n, s, s./a, rw);	% make the gaussian%G = ones(n);	% for debuggingA = 0.501 + 0.5*(B.*G);