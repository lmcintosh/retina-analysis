function lintest(gamma, xo);% lintest.m% LINTEST checks the LUT linearity, among other things.%	LINTEST defaults to gamma = 2 and xo = 0%	LINTEST(GAMMA) and LINTEST(GAMMA, XO) use the supplied values% 	Written by S.B. Stevenson.% 	Changes:%		comments, etc. added  - L.K. Cormack%		changed to function w/ gamma parameters as arguments -lkc%		now cleans up its figs -lkcif nargin == 0	gamma = 2;	xo = 0;elseif nargin == 1	xo = 0;elseif nargin ~= 2	error('lintest must have 0, 1, or 2 arguments')end%figure(1)% show horizontal and vertical one-pixel bands to see adjacent pixel non-linearity%showim([repmat([1 0],256,128) repmat([1 0]',128,256)]);%showsc([repmat([1 0],256,128) repmat([1 0]',128,256)]);%pause% make and show gray-level blocks and a gratingbksiz = 128;testim = reshape(repmat([0 64 128 192 255],bksiz.^2,1),[bksiz, bksiz*5]);gratim = repmat(127+127*sin(8*2*pi*[1:bksiz*5]/(bksiz*5)),[bksiz,1]);lineim = repmat([0 255],bksiz,bksiz/2);%figure(2)%showim([testim;gratim]);%showsc([testim;gratim]);%pause% make and show an interleaved ascending and decending rampmixim = [0:127;255:-1:128];mixim = repmat(mixim(:),1 , 64);%showim([mixim]);%pause%close all;	% put away matlab's figure windows% show the same images with SCREEN() from the psychophysics toolbox% first with a ramp in the LUT...[wndptr,rect] = screen(0,'OpenWindow',128);map = [[0:255]' [0:255]' [0:255]'];screen(wndptr,'SetClut',map);screen(wndptr,'PutImage',[testim;gratim]);screen(wndptr,'PutImage',lineim');screen(wndptr,'FillOval',128,[rect(3)/2-bksiz/4, rect(4)/2-bksiz/4, rect(3)/2+bksiz/4, rect(4)/2+bksiz/4]);theKey = getChar;% then with a gamma-corrected LUT%screen(wndptr,'SetClut',gamcor(map));screen(wndptr,'SetClut',gammainv(256, gamma, xo));theKey = getChar;screen(wndptr,'FillRect',128,rect);screen(wndptr,'PutImage',mixim);screen(wndptr,'SetClut',map);theKey = getChar;screen(wndptr,'SetClut',gammainv(256, gamma, xo));%screen(wndptr,'SetClut',gamcor(map));theKey = getChar;screen('CloseAll')